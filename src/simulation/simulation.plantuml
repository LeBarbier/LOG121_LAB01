@startuml

title __SIMULATION's Class Diagram__\n

  namespace simulation {
    class simulation.ComposanteEnChemin {
        ~ positionActuelle : Point
        ~ vitesse : Point
        + ComposanteEnChemin()
        - initNoeudDepartArrive()
    }
  }
  

  namespace simulation {
    class simulation.Environnement {
        {static} + horloge : Horloge
        {static} - DELAI : int
        - actif : boolean
        + Environnement()
        + ajouterObservateur()
        # doInBackground()
    }
  }
  

  namespace simulation {
    class simulation.FenetrePrincipale {
        {static} - DIMENSION : Dimension
        {static} - TITRE_FENETRE : String
        {static} - serialVersionUID : long
        + FenetrePrincipale()
        + propertyChange()
    }
  }
  

  namespace simulation {
    class simulation.FenetreStrategie {
        {static} - DIMENSION : Dimension
        {static} - TITRE_FENETRE : String
        {static} - serialVersionUID : long
        + FenetreStrategie()
    }
  }
  

  namespace simulation {
    class simulation.Horloge {
        - tourPassee : int
        {static} - venteAleatoire : boolean
        + Horloge()
        + ajouterObservateur()
        + getTourPassee()
        {static} + isVenteAleatoire()
        {static} + setVenteAleatoire()
        + tourPassee()
    }
  }
  

  namespace simulation {
    class simulation.MenuFenetre {
        {static} - MENU_AIDE_PROPOS : String
        {static} - MENU_AIDE_TITRE : String
        {static} - MENU_FICHIER_CHARGER : String
        {static} - MENU_FICHIER_QUITTER : String
        {static} - MENU_FICHIER_TITRE : String
        {static} - MENU_SIMULATION_CHOISIR : String
        {static} - MENU_SIMULATION_TITRE : String
        {static} - serialVersionUID : long
        + MenuFenetre()
        - ajouterMenuAide()
        - ajouterMenuFichier()
        - ajouterMenuSimulation()
    }
  }
  

  namespace simulation {
    class simulation.PanneauPrincipal {
        {static} + listeComposanteOnWire : ArrayList<ComposanteEnChemin>
        {static} + listeComposanteOnWireARetirer : ArrayList<ComposanteEnChemin>
        ~ arrayListLigne : ArrayList<Line2D>
        ~ listeChemins : String[][]
        ~ listeImageNoeud : String[][]
        ~ listeNoeud : HashMap<Integer, Noeud>
        {static} - serialVersionUID : long
        - taille : int
        + PanneauPrincipal()
        {static} + mettreComposanteOnWire()
        + paint()
        {static} - isComposanteAtDestination()
        {static} - obtenirVitesseTransport()
        - retirerComposanteOnWire()
    }
  }
  

  namespace simulation {
    class simulation.PanneauStrategie {
        {static} - serialVersionUID : long
        + PanneauStrategie()
        + getSelectedButtonText()
    }
  }
  

  namespace simulation {
    class simulation.Simulation {
        {static} + listeNoeudSimulation : HashMap<Integer, Noeud>
        {static} + getListeNoeudSimulation()
        {static} + main()
    }
  }
  

  simulation.ComposanteEnChemin o-- objet.Composante : composante
  simulation.ComposanteEnChemin o-- objet.Noeud : noeudArrive
  simulation.ComposanteEnChemin o-- objet.Noeud : noeudDepart
  simulation.Environnement -up-|> javax.swing.SwingWorker
  simulation.FenetrePrincipale .up.|> java.beans.PropertyChangeListener
  simulation.FenetrePrincipale -up-|> javax.swing.JFrame
  simulation.FenetreStrategie -up-|> javax.swing.JFrame
  simulation.FenetreStrategie o-- simulation.PanneauStrategie : panneauStrategie
  simulation.Horloge -up-|> java.util.Observable
  simulation.MenuFenetre -up-|> javax.swing.JMenuBar
  simulation.PanneauPrincipal -up-|> javax.swing.JPanel
  simulation.PanneauStrategie -up-|> javax.swing.JPanel


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
